Web3 = require('web3')
web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
web3.eth.accounts
code = fs.readFileSync('projectCode/Spotify.sol').toString()
solc = require('solc')
compiledCode = solc.compile(code)
abiDefinition = JSON.parse(compiledCode.contracts[':Spotify'].interface)
SpotifyContract = web3.eth.contract(abiDefinition)
byteCode = compiledCode.contracts[':Spotify'].bytecode

deployedContract = SpotifyContract.new( 1000 ,{data: byteCode, from: web3.eth.accounts[0], gas: 4700000})


deployedContract.address
contractInstance = SpotifyContract.at(deployedContract.address)


//assign creator(3) role to 0,1,2,3 
contractInstance.assignRole(3,web3.eth.accounts[0],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(3,web3.eth.accounts[1],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(3,web3.eth.accounts[2],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(3,web3.eth.accounts[3],{from:web3.eth.accounts[0],gas:900000})
//assign individual(1) role to 4,5,6,7
contractInstance.assignRole(1,web3.eth.accounts[4],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(1,web3.eth.accounts[5],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(1,web3.eth.accounts[6],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(1,web3.eth.accounts[7],{from:web3.eth.accounts[0],gas:900000})
//assign company(2) role to 8,9
contractInstance.assignRole(2,web3.eth.accounts[8],{from:web3.eth.accounts[0],gas:900000})
contractInstance.assignRole(2,web3.eth.accounts[9],{from:web3.eth.accounts[0],gas:900000})

//get Type of Each Account
contractInstance.getType(web3.eth.accounts[0],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[1],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[2],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[3],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[4],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[5],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[6],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[7],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[8],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()
contractInstance.getType(web3.eth.accounts[9],{from:web3.eth.accounts[0],gas:900000}).toLocaleString()

//try to change my Role Unsuccessfully!
contractInstance.assignRole(1,web3.eth.accounts[9],{from:web3.eth.accounts[9],gas:900000})

// 1 creates a song individually and another with 2 and 3
contractInstance.createMedia([],[],"song1",2,1,{from:web3.eth.accounts[1],gas: 900000})
contractInstance.createMedia([web3.eth.accounts[2],web3.eth.accounts[3]],[200,400],"song2",2,1,{from:web3.eth.accounts[1],gas: 900000})


// show media available to buy for individual and company
contractInstance.mediaAvailableToBuy(web3.eth.accounts[7],{from:web3.eth.accounts[7],gas: 900000})
contractInstance.mediaAvailableToBuy(web3.eth.accounts[8],{from:web3.eth.accounts[8],gas: 900000})

// show media available to buy for Creator- It should be none
contractInstance.mediaAvailableToBuy(web3.eth.accounts[1],{from:web3.eth.accounts[1],gas: 900000})

// show Media Information
contractInstance.getMediaInformation('song1',{from:web3.eth.accounts[6],gas: 900000})
contractInstance.getMediaInformation('song2',{from:web3.eth.accounts[6],gas: 900000})


// show Account Information
contractInstance.getPersonalInformation(web3.eth.accounts[6],{from:web3.eth.accounts[6],gas: 900000})
contractInstance.getPersonalInformation(web3.eth.accounts[9],{from:web3.eth.accounts[9],gas: 900000})

//Check Balance
web3.fromWei(web3.eth.getBalance(web3.eth.accounts[1])).toLocaleString()
web3.fromWei(web3.eth.getBalance(web3.eth.accounts[6])).toLocaleString()

// try to buy
contractInstance.buyMedia('song1',{from:web3.eth.accounts[6],value:web3.toWei('1', 'ether'),gas: 900000})





// function createMedia(
// 	address[] stakeHoldersAddresses,
// 	uint[] stakeHoldersShares, 
// 	bytes32 mediaName,
// 	 uint compCost,
// 	 uint indCost) 

